js is synchronous and single thread
we need to acheicve asynchorus opertaion

node is non blocking and asyncronous single thres


valid
var a = 10;
var a =1000;


invalid
let a =10;
let a= 1000;


invalid
let a =10;
var a= 1000;

var stored in gloabscope let in script





invalid
let a =10
function block(){
var a =10
}




valid
var a =10
function block(){
let a =10
}

let a =10
function block(){
let a =10
}

var a =10
function block(){
var a =10
}





invalid

function block(){
var a =10
}
console.log(a)




shawoding

var a =10 //it is in global
{
var a =100// it is in global
}
consol.log(a)// 100


let a =10 // it is in script
{
let a =100 // it is in block
}
consol.log(a)// 10



lexical env is local memory and it's parent
scope means who and all consume the variable b

allocating mememeory is called hoisting

time when let a is created and inititlazed a=10 is called tem zed zone if u try to acces in tem zed zone referbec error

function along with lexical scope is called closure





















